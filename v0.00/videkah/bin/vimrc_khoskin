"=====[ General programming support ]===================================

" Insert various shebang lines...
iab hbs #!/bin/bash<CR>
iab hbp #!/usr/bin/perl<CR>use strict;<CR>use warnings;<CR>


" TODO , change the "kh" prefix to "vk" . 
" TODO , change the "khaosnum" to "videkahnum"
" TODO , put all this stuff in the vimrc_videkah. maybe vimrc_videkah_perl_iab_debug

" Insert common Perl code structures...
iab khdd <ESC>0iuse Data::Dumper;print STDERR "\nkhaosnum dumper of   =".Dumper (); # TODO rm this line<cr><ESC>klllllllllllllllllllllllllllllllllllllllllllllllllllli

" the following is a Venda-r-ism :-
iab khdds <ESC>0imy ($karl_package, $karl_filename, $karl_line) = caller; Venda->current->log_func({ tracing => 1, msg => "karl - ", dumper => { caller => { file => $karl_filename, line => $karl_line, }, }, }); # TODO rm this line<cr><ESC>i

iab khd <ESC>0iprint STDERR "\nkhaosnum Dumper of   =".Dumper (); # TODO rm this line<cr><ESC>klllllllllllllllllllllllllllllllllllli

iab khp <ESC>0iprint STDERR "\nkhaosnum    \n"; # TODO rm this line<cr><ESC>kllllllllllllllllllllllllli

iab khlh <esc>0i#### karl looking here. # TODO rm this line<cr><ESC>i

iab khpod <ESC>0i<cr>=item head2<cr><cr>B<Description><cr><cr>B<Parameters><cr><cr>=over<cr><cr>=item C<...><cr><cr>=back<cr><cr>B<Returns><cr><cr>B<Throws><cr><cr>=cut<cr><cr><esc>0kkkkkkkkkkkkkkkkkkki

iab khtr     <ESC>0i<cr>use Devel::StackTrace; print STDERR Devel::StackTrace->new->as_string; # TODO rm this line<cr><ESC>i
iab khtrace  <ESC>0i<cr>use Devel::StackTrace; print STDERR Devel::StackTrace->new->as_string; # TODO rm this line<cr><ESC>i

iab khrmthis <ESC>A # TODO rm this line<cr><ESC>i

iab khrebase <ESC>0irebase away this commit<cr><ESC>i

iab khds  <ESC>0i<cr>use Data::Show;<CR>show<esc>i

iab khbm  <ESC>0i<cr>use Benchmark qw( cmpthese );<CR><CR>cmpthese -10, {<CR>};<cr><ESC>i

iab khsmcm    <ESC>0i<cr>use Smart::Comments;<CR>###<cr><esc>i

iab khtests   <ESC>0i<cr>use Test::Simple 'no_plan';<cr><esc>i

iab khtestm   <ESC>0i<cr>use Test::More 'no_plan';<cr>use Test::Deep;<cr><esc>i

iab kh7       <ESC>0i<cr>$DB::single = 1;<cr><ESC>i

iab khpause   <ESC>0i<cr>print STDERR "\nkhaosnum . paused . ctrl-d to continue\n"; @crap=<STDIN>; # TODO rm this line<cr><ESC>i
iab khpausemy <ESC>0i<cr>my @crap; # TODO rm this line<cr>print STDERR "\nkhaosnum . paused . ctrl-d to continue\n"; @crap=<STDIN> ; # TODO rm this line<cr><ESC>i

" the following is a Venda-r-ism ....
iab khdonotrun <ESC>0i<cr>sub doNotRunInTransaction { 1 } # TODO rm this line<cr><ESC>

"" <space>n keymapping is reservered for the khaosnum in the vimrc_khoskin file
nnoremap <Space>n :call RenumberKhaosnumInFile()<cr>

function! RenumberKhaosnumInFile ()

"    echo '##########################'
"    echo 'khaosnum-[renum]bering !!!'
"    echo '##########################'
    let orig_line = line('.')
    exec 0

    " so this matches lines with something like :-
    " print STDERR "khaosnum
    " in the line.

    " it then goes and splits the line at the point .
    " removes any old linenumbers
    " and inserts a new line-number.

    let prefix_printkhaosnum_regex = '^.\{-}print\s\+STDERR\s\+\("\|'."'".'\)\\*n*khaosnum'

    echo "#"
    echo "###################################"
    echo "Renumbering the khaosnum lines ...."
    echo "###################################"


    while (search(prefix_printkhaosnum_regex, 'W'))
        let linestr = getline('.')
        let frontlinestr =  matchstr( linestr , prefix_printkhaosnum_regex )

        let endlinestr = substitute(linestr, prefix_printkhaosnum_regex , '', '' )

        " (< .... >)  brackets indicate the numbered section in a line that needs removing and replacing

        let endlinestr = substitute(endlinestr , '\s*(<.\{-}>)\s*', '', '' )

        " TODO the following line needs removing once we've changed all the brackets over to the (< >) style.
        let endlinestr = substitute(endlinestr , '^\s*(.\{-})\s*', '', '' )

        call setline('.', frontlinestr.' (< '.@%.':'.line('.').': >) '.endlinestr )

        echo "renumbered ".line('.')

    endwhile

    echo "########################################"
    echo "FINISHED Renumbering the khaosnum lines "
    echo "########################################"

    exec orig_line

endfunction


"map <S-d> 0jiuse Data::Dumper; print STDERR "Dumper of   >>> ".Dumper(   );<CR><ESC>
"map <C-S-d> 0jiprint STDERR "  \n";<CR><ESC>
"map <C-S-Z> 0jiprint STDERR (caller(0))[3]."\n";<CR><ESC>
""map <S-t> 0jiuse Devel::StackTrace; print STDERR Devel::StackTrace->new->as_string; <CR><ESC>
"map <S-t> 0jiuse Devel::StackTrace; my $str = Devel::StackTrace->new->as_string; $str =~ s/called at/\n    called at/g; $str =~ s/^/    /mg; print STDERR "$str\n";<CR><ESC>
"map <S-l> iVenda->current->log_func({ tracing=>1, msg=>"KARL  ",<CR>#dumper => $somevar,<CR>});<CR><ESC>

"=====[ Correct common mistypings on-the-fly ]=======================

iab    retrun  return
iab     pritn  print
iab     pirtn  print
iab       teh  the
iab      liek  like
iab  liekwise  likewise
iab      Pelr  Perl
iab      pelr  perl
iab      moer  more
iab  previosu  previous


